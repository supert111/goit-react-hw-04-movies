{"version":3,"sources":["api/data.api.js","views/HomeMovieListView.js","views/HomePageViews.js"],"names":["BASE_URL","API_KEY","API","fetchPopularFilms","axios","get","then","response","data","results","catch","console","error","fetchFilmByQuery","searchQuery","fetchFilmById","movie_id","fetchCast","fetchReviews","posterimgpath","profilePath","withRouter","trendFilms","map","film","to","routes","movies","id","title","HomePageViews","state","popularFilms","setState","this","match","props","Component"],"mappings":"yIAAA,qBAEMA,EAAW,8BACVC,EAAU,mCAEXC,EAAM,CACRC,kBADQ,WAEJ,OAAOC,IACFC,IADE,UAEIL,EAFJ,yCAE6CC,IAE/CK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,WAC/BC,OAAM,kBAAMC,QAAQC,MAAM,kBAGnCC,iBAVQ,WAU6B,IAAnBC,EAAkB,uDAAJ,GAC5B,OAAOV,IACFC,IADE,UAEIL,EAFJ,kCAEsCC,EAFtC,iCAEsEa,IAExER,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,WAC/BC,OAAM,kBAAMC,QAAQC,MAAM,uBAGnCG,cAnBQ,WAmBuB,IAAhBC,EAAe,uDAAJ,GACtB,OAAOZ,IACFC,IADE,UAEIL,EAFJ,mBAEuBgB,EAFvB,oBAE2Cf,IAE7CK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BE,OAAM,kBAAMC,QAAQC,MAAM,+BAEnCK,UA3BQ,WA2BmB,IAAhBD,EAAe,uDAAJ,GAClB,OAAOZ,IACFC,IADE,UAEIL,EAFJ,mBAEuBgB,EAFvB,4BAEmDf,IAErDK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BE,OAAM,kBAAMC,QAAQC,MAAM,eAGnCM,aApCQ,WAoCsB,IAAhBF,EAAe,uDAAJ,GACrB,OAAOZ,IACFC,IADE,UAEIL,EAFJ,mBAEuBgB,EAFvB,4BAEmDf,IAErDK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,WAC/BC,OAAM,kBAAMC,QAAQC,MAAM,eAGnCO,cAAc,mCACdC,YAAY,oCAGDlB,O,sHCtCAmB,eAdW,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACzB,OACI,6BACCA,EAAWC,KAAI,SAAAC,GAAI,OAChB,6BACI,cAAC,IAAD,CAAMC,GAAE,UAAKC,IAAOC,OAAZ,YAAsBH,EAAKI,IAAnC,SACKJ,EAAKK,SAFLL,EAAKI,YCDpBE,E,4MACFC,MAAQ,CACJC,aAAc,I,uDAGlB,WAAqB,IAAD,OAChB9B,IAAIC,oBACHG,MAAK,SAAAG,GACF,EAAKwB,SAAS,CAAED,aAAcvB,S,oBAItC,WAAU,IACEuB,EAAiBE,KAAKH,MAAtBC,aACAG,EAAUD,KAAKE,MAAMD,MAArBA,MAER,OACI,gCACI,kDACA,cAAC,EAAD,CAAmBb,WAAYU,EAAcG,MAAOA,W,GAnBxCE,aAyBbP","file":"static/js/home-view.e6e2c9d1.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://api.themoviedb.org/';\r\nconst  API_KEY = 'e0864e234ad59915a65f6e683712555d';\r\n\r\nconst API = {\r\n    fetchPopularFilms () {\r\n        return axios\r\n            .get (\r\n                `${BASE_URL}/3/trending/movie/day?api_key=${API_KEY}`,\r\n            )\r\n            .then(response => response.data.results)\r\n            .catch(() => console.error('no popular'));\r\n    },\r\n\r\n    fetchFilmByQuery (searchQuery = '') {  \r\n        return axios\r\n            .get (\r\n                `${BASE_URL}3/search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}`,\r\n            )\r\n            .then(response => response.data.results)\r\n            .catch(() => console.error('no search movie'));\r\n    },\r\n\r\n    fetchFilmById (movie_id = '') {\r\n        return axios\r\n            .get (\r\n                `${BASE_URL}3/movie/${movie_id}?api_key=${API_KEY}`,\r\n            )\r\n            .then(response => response.data)\r\n            .catch(() => console.error('current film is missing'));\r\n    },\r\n    fetchCast (movie_id = '') {\r\n        return axios\r\n            .get (\r\n                `${BASE_URL}3/movie/${movie_id}/credits?api_key=${API_KEY}`,\r\n            )\r\n            .then(response => response.data)\r\n            .catch(() => console.error('no cast'));\r\n    },\r\n\r\n    fetchReviews (movie_id = '') {\r\n        return axios\r\n            .get (\r\n                `${BASE_URL}3/movie/${movie_id}/reviews?api_key=${API_KEY}`,\r\n            )\r\n            .then(response => response.data.results)\r\n            .catch(() => console.error('no cast'));\r\n    },\r\n\r\n    posterimgpath: `https://image.tmdb.org/t/p/w342/`,\r\n    profilePath: `https://image.tmdb.org/t/p/w185/`,\r\n};\r\n\r\nexport default API;  ","import { Link, withRouter } from 'react-router-dom';\r\nimport routes from '../routes';\r\nconst HomeMovieListView = ({ trendFilms }) => {\r\n    return (\r\n        <ul>\r\n        {trendFilms.map(film => ( \r\n            <li key={film.id}> \r\n                <Link to={`${routes.movies}/${film.id}`}>\r\n                    {film.title} \r\n                </Link>\r\n            </li> \r\n        ))}\r\n    </ul>  \r\n    )\r\n}\r\n\r\nexport default withRouter(HomeMovieListView);","import { Component } from 'react';\r\nimport API from '../api/data.api';\r\nimport HomeMovieListView from './HomeMovieListView';\r\n\r\n\r\nclass HomePageViews extends Component {\r\n    state = {\r\n        popularFilms: [],\r\n    };\r\n\r\n    componentDidMount() {\r\n        API.fetchPopularFilms()\r\n        .then(results => {\r\n            this.setState({ popularFilms: results })\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { popularFilms } = this.state;\r\n        const { match } = this.props.match;\r\n\r\n        return (\r\n            <div>\r\n                <h1> Trending today </h1>\r\n                <HomeMovieListView trendFilms={popularFilms} match={match} />\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default HomePageViews;"],"sourceRoot":""}